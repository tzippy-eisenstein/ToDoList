{"version":3,"sources":["service.js","App.js","index.js"],"names":["apiUrl","axios","defaults","baseURL","async","result","get","concat","console","log","data","error","name","post","id","IsComplete","put","delete","App","newTodo","setNewTodo","useState","todos","setTodos","getTodos","service","useEffect","React","createElement","className","onSubmit","e","preventDefault","placeholder","value","onChange","target","style","display","map","todo","isComplete","key","type","defaultChecked","updateCompleted","checked","onClick","deleteTodo","ReactDOM","render","document","getElementById"],"mappings":"oKAEA,MAAMA,EAAS,wBAEfC,IAAMC,SAASC,QAAUH,EAKV,MACHI,UACR,IACE,MAAMC,QAAeJ,IAAMK,IAAI,GAADC,OAAIP,EAAM,MAExC,OADAQ,QAAQC,IAAIJ,EAAOK,MACZL,EAAOK,KAEhB,MAAOC,GAGL,OAFAH,QAAQG,MAAMA,GAEP,OAVE,EAcJP,UACP,IAIC,OAHCI,QAAQC,IAAI,UAAWG,SACjBX,IAAMY,KAAK,GAADN,OAAIP,EAAM,KAAAO,OAAIK,IAExB,GAER,MAAOD,GAGL,OAFAH,QAAQG,MAAMA,GAEP,OAxBE,EA4BCP,MAAMU,EAAIC,KACtB,UACqBd,IAAMe,IAAI,GAADT,OAAIP,EAAM,KAAAO,OAAIO,EAAE,KAAAP,OAAIQ,IAGhD,OADAP,QAAQC,IAAI,eAAgB,CAACK,KAAIC,eAC1B,GAET,MAAOJ,GAGL,OAFAH,QAAQG,MAAMA,GAEP,OAtCE,EA0CFP,UACT,IACEI,QAAQC,IAAI,oBACOR,IAAMgB,OAAO,GAADV,OAAIP,EAAM,KAAAO,OAAIO,IAC7C,MAAO,GAET,MAAOH,GAGL,OAFAH,QAAQG,MAAMA,GAEP,OCGEO,MA3Df,WACE,MAAOC,EAASC,GAAcC,mBAAS,KAChCC,EAAOC,GAAYF,mBAAS,IAEnCjB,eAAeoB,IACb,MAAMF,QAAcG,IACpBF,EAASD,GA0BX,OANAI,oBAAU,KACRF,KACC,IAKDG,IAAAC,cAAA,WAASC,UAAU,WACjBF,IAAAC,cAAA,UAAQC,UAAU,UAChBF,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,QAAME,SA3BZ1B,eAA0B2B,GACxBA,EAAEC,uBACIP,EAAgBN,GACtBC,EAAW,UACLI,MAwBAG,IAAAC,cAAA,SAAOC,UAAU,WAAWI,YAAY,8BAA8BC,MAAOf,EAASgB,SAAWJ,GAAMX,EAAWW,EAAEK,OAAOF,WAG/HP,IAAAC,cAAA,WAASC,UAAU,OAAOQ,MAAO,CAAEC,QAAS,UAC1CX,IAAAC,cAAA,MAAIC,UAAU,aACXP,EAAMiB,IAAIC,GAEPb,IAAAC,cAAA,MAAIC,UAA4B,KAAjBW,EAAKC,WAAkB,YAAc,GAAIC,IAAKF,EAAK1B,IAChEa,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,SAAOC,UAAU,SAASc,KAAK,WAAWC,eAAgBJ,EAAKC,WAAYN,SAAWJ,GA9BtG3B,eAA+BoC,EAAMC,SAC7BhB,EAAqBe,EAAK1B,GAAI2B,SAC9BjB,IA4BoGqB,CAAgBL,EAAMT,EAAEK,OAAOU,WAC3HnB,IAAAC,cAAA,aAAQY,EAAK5B,MACbe,IAAAC,cAAA,UAAQC,UAAU,UAAUkB,QAASA,IA3BrD3C,eAA0BU,SAClBW,EAAmBX,SACnBU,IAyBmDwB,CAAWR,EAAK1B,aChD7EmC,IAASC,OAAOvB,IAAAC,cAACV,EAAG,MAAKiC,SAASC,eAAe,U","file":"static/js/main.e7b5c08c.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst apiUrl = \"http://localhost:5107\"\n\naxios.defaults.baseURL = apiUrl;\n\n\n\n\nexport default {\n  getTasks: async () => {\n    try{\n      const result = await axios.get(`${apiUrl}/`)  \n      console.log(result.data) \n      return result.data; ;\n    }\n    catch (error) {\n      console.error(error);\n      // Handle the error if needed\n      return null;\n    }\n  },\n  \n  addTask: async(name)=>{\n    try{\n      console.log('addTask', name)\n      await axios.post(`${apiUrl}/${name}`) \n     //TODO\n     return {};\n    }\n    catch (error) {\n      console.error(error);\n      // Handle the error if needed\n      return null;\n    }\n  },\n\n  setCompleted: async(id, IsComplete)=>{\n    try{\n      const result=await axios.put(`${apiUrl}/${id}/${IsComplete}`)\n      //TODO\n      console.log('setCompleted', {id, IsComplete})\n      return {}\n    }\n    catch (error) {\n      console.error(error);\n      // Handle the error if needed\n      return null;\n    }\n  },\n\n  deleteTask:async(id)=>{\n    try{\n      console.log('deleteTask')\n      const result=await axios.delete(`${apiUrl}/${id}`)\n      return {};\n    }\n    catch (error) {\n      console.error(error);\n      // Handle the error if needed\n      return null;\n    }\n  }\n};\n","import React, { useEffect, useState } from 'react';\nimport service from './service.js';\n\n\nfunction App() {\n  const [newTodo, setNewTodo] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  async function getTodos() {\n    const todos = await service.getTasks();\n    setTodos(todos);\n  }\n\n  async function createTodo(e) {\n    e.preventDefault();\n    await service.addTask(newTodo);\n    setNewTodo(\"\");//clear input\n    await getTodos();//refresh tasks list (in order to see the new one)\n  }\n\n  async function updateCompleted(todo, isComplete) {\n    await service.setCompleted(todo.id, isComplete);\n    await getTodos();//refresh tasks list (in order to see the updated one)\n  }\n\n  async function deleteTodo(id) {\n    await service.deleteTask(id);\n    await getTodos();//refresh tasks list\n  }\n\n  useEffect(() => {\n    getTodos();\n  }, []);\n\n  \n\n  return (\n    <section className=\"todoapp\">\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form onSubmit={createTodo}>\n          <input className=\"new-todo\" placeholder=\"Well, let's take on the day\" value={newTodo} onChange={(e) => setNewTodo(e.target.value)} />\n        </form>\n      </header>\n      <section className=\"main\" style={{ display: \"block\" }}>\n        <ul className=\"todo-list\">\n          {todos.map(todo => {\n            return (\n              <li className={todo.isComplete==\"1\" ? \"completed\" : \"\"} key={todo.id}>\n                <div className=\"view\">\n                  <input className=\"toggle\" type=\"checkbox\" defaultChecked={todo.isComplete} onChange={(e) => updateCompleted(todo, e.target.checked)} />\n                  <label>{todo.name}</label>\n                  <button className=\"destroy\" onClick={() => deleteTodo(todo.id)}></button>\n                </div>\n              </li>\n            );\n          })}\n        </ul>\n      </section>\n    </section >\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}